version: 2

jobs:
 # must be called build for local circle cli to work
 # is actually unit tests
 build:
  docker:
   - image: holochain/holochain-rust:latest
  resource_class: xlarge
  steps:
   - checkout
   - run:
       name: DynamoDB
       command: nix-shell --run dynamodb-memory
       background: true
   - run:
      name: wait for dynamodb
      command: nix-shell --run 'aws dynamodb list-tables --endpoint-url=http://localhost:8000'
   - run:
      command: nix-shell --run hc-rust-test
      no_output_timeout: 20m

 fmt:
  docker:
   - image: holochain/holochain-rust:latest
  steps:
   - checkout
   - run:
      command: nix-shell --run hc-test-fmt
      no_output_timeout: 20m
   - run:
      command: nix-shell --run hn-rust-clippy
      no_output_timeout: 20m
   # don't allow unpinned deps
   - run:
      name: no unpinnned deps
      command: |
        # temporary avoid build fails due to greps
        set +eo pipefail
        export UNPINNED=`nix-shell --run hc-rust-manifest-list-unpinned`
        set -eo pipefail
        if [[ $UNPINNED ]]
        then
         echo "unpinned deps must be empty:"
         echo "$UNPINNED"
         exit 1
        fi
   # don't allow changelog root items with no PR reference
   - run:
      name: no changelogs without PR references
      command: |
        # temporary avoid build fails due to greps
        set +eo pipefail
        export UNREFERENCED=`nix-shell --run hc-release-docs-changelog-list-missing-references`
        set -eo pipefail
        if [[ $UNREFERENCED ]]
        then
          echo "all root level changelog items need a PR reference:"
          echo "$UNREFERENCED"
          exit 1
        fi

   # flag any references to a nightly version in a readme other than the
   # ${date} in nix-shell
   - run:
      name: no readmes with bad rust nightly versions
      command: |
        # temporary avoid build fails due to greps
        set +eo pipefail
        export BAD_NIGHTLY=`nix-shell --run hc-release-docs-readme-list-stale-nightlies`
        set -eo pipefail
        if [[ $BAD_NIGHTLY ]]
        then
          echo "there is an incorrect nightly version in a readme file:"
          echo $BAD_NIGHTLY
          exit 1
        fi

 app-spec-tests-sim1h:
  docker:
   - image: holochain/holochain-rust:latest
  resource_class: xlarge
  steps:
   - checkout
   - run:
       name: DynamoDB
       command: nix-shell --run dynamodb-memory
       background: true
   - run:
      name: wait for dynamodb
      command: nix-shell --run 'aws dynamodb list-tables --endpoint-url=http://localhost:8000'
   - run:
       name: app spec tests
       command: nix-shell --run hc-app-spec-test-sim1h
       no_output_timeout: 20m

 app-spec-tests-sim2h:
   docker:
     - image: holochain/holochain-rust:latest
   resource_class: xlarge
   steps:
     - checkout
     - run:
         name: sim2h server
         command: nix-shell --run hc-sim2h-server
         background: true
         no_output_timeout: 20m
     - run:
         name: app spec tests
         command: nix-shell --run hc-app-spec-test-sim2h
         no_output_timeout: 20m
# app-spec-tests-n3h:
#  docker:
#   - image: holochain/holochain-rust:latest
#  resource_class: xlarge
#  steps:
#   - checkout
#
#   - run:
#       name: app spec tests
#       command: nix-shell --run "hc-app-spec-test n3h"
#
# app-spec-tests-memory:
#  docker:
#   - image: holochain/holochain-rust:latest
#  resource_class: xlarge
#  steps:
#   - checkout
#
#   - run:
#       name: app spec tests
#       command: nix-shell --run "hc-app-spec-test memory"
#
# app-spec-tests-websocket:
#  docker:
#   - image: holochain/holochain-rust:latest
#  resource_class: xlarge
#  steps:
#   - checkout
#
#   - run:
#       name: app spec tests
#       command: nix-shell --run "hc-app-spec-test websocket"

 app-spec-proc-tests:
  docker:
   - image: holochain/holonix:latest
  resource_class: xlarge
  steps:
   - checkout

   - run:
       name: proc macro app spec tests
       command: nix-shell --run hc-app-spec-test-proc

 cluster-tests:
  docker:
   - image: holochain/holochain-rust:latest
  resource_class: xlarge
  steps:
   - checkout
   - run:
       name: sim2h server
       command: nix-shell --run "hc-sim2h-server -p 9001"
       background: true
       no_output_timeout: 20m
   - run:
       name: app spec cluster tests
       command: nix-shell --run hc-app-spec-cluster-test
       no_output_timeout: 20m

 stress-tests-sim1h:
  docker:
   - image: holochain/holochain-rust:latest
  resource_class: xlarge
  steps:
   - checkout
   - run:
       name: DynamoDB
       command: nix-shell --run dynamodb-memory
       background: true
   - run:
      name: wait for dynamodb
      command: nix-shell --run 'aws dynamodb list-tables --endpoint-url=http://localhost:8000'
   - run:
       name: stress tests
       command: nix-shell --run hc-stress-test-sim1h
       no_output_timeout: 20m

 stress-tests-sim2h:
   docker:
     - image: holochain/holochain-rust:latest
   resource_class: xlarge
   steps:
     - checkout
     - run:
         name: sim2h server
         command: nix-shell --run "hc-sim2h-server -p 9002"
         background: true
         no_output_timeout: 20m
     - run:
         name: stress tests
         command: nix-shell --run hc-stress-test-sim2h
         no_output_timeout: 20m

 cli-tests:
  docker:
   - image: holochain/holochain-rust:latest
  steps:
   - checkout

   - run:
      name: test cli
      command: nix-shell --run hc-cli-test

 wasm-conductor-tests:
  docker:
   - image: holochain/holochain-rust:latest
  steps:
   - checkout

   - run:
       name: wasm conductor tests
       command: nix-shell --run hc-conductor-wasm-test
       no_output_timeout: 20m

 cold.mac.10.nix:
  macos:
   xcode: "10.2.0"
  steps:
   - checkout
   - run:
      name: Install and run all tests via nix
      command: |
       curl https://nixos.org/nix/install | sh
       . /Users/distiller/.nix-profile/etc/profile.d/nix.sh
       nix-shell --run hc-test

 deploy.mac:
  macos:
   xcode: "10.2.0"
  steps:
   - checkout
   - run:
      name: Deploy mac binaries
      no_output_timeout: 20m
      command: |
       curl https://nixos.org/nix/install | sh
       . /Users/distiller/.nix-profile/etc/profile.d/nix.sh
       nix-shell --run hc-release-github-binaries

 deploy.linux:
  docker:
   - image: holochain/holonix:ubuntu
  steps:
   - run: sudo apt-get update && sudo apt-get install -y git ssh
   - checkout
   - run:
      name: Deploy linux binaries
      no_output_timeout: 20m
      command: |
       . /home/docker/.nix-profile/etc/profile.d/nix.sh
       nix-shell --run hc-release-github-binaries

 deploy.crates:
  docker:
   - image: holochain/holonix:latest
  steps:
   - checkout
   - run:
      no_output_timeout: 20m
      command: nix-shell --run hc-release-hook-publish

 docker.build.latest:
  machine: true
  steps:
   - checkout
   - run: ./docker/login
   - run:
      no_output_timeout: 20m
      command: ./docker/build latest $CIRCLE_BRANCH
   - run: ./docker/push latest $CIRCLE_BRANCH

 docker.build.sim2h_server:
  machine: true
  steps:
   - checkout
   - run: ./docker/login
   - run:
      no_output_timeout: 20m
      command: ./docker/build sim2h_server $CIRCLE_BRANCH
   - run: ./docker/push sim2h_server $CIRCLE_BRANCH

 docker.build.trycp_server:
  machine: true
  steps:
   - checkout
   - run: ./docker/login
   - run:
      no_output_timeout: 20m
      command: ./docker/build trycp_server $CIRCLE_BRANCH
   - run: ./docker/push trycp_server $CIRCLE_BRANCH

 docker.build.minimal:
  machine: true
  steps:
   - checkout
   - run: ./docker/login
   - run:
      no_output_timout: 20m
      command: ./docker/build minimal $CIRCLE_BRANCH
   - run: ./docker/push minimal $CIRCLE_BRANCH

workflows:
 version: 2
 tests:
  jobs:
   - build
   - fmt
   - app-spec-tests-sim1h
   - app-spec-tests-sim2h
   # - app-spec-tests-memory
   # - app-spec-tests-websocket
   # @todo reimplement proc tests properly
   # i.e. don't copy and paste app spec and expec it to work with stale state
   # - app-spec-proc-tests
   - cluster-tests
   - cli-tests
   - wasm-conductor-tests
   # @todo this was flakey
   # - stress-tests-sim1h
   - stress-tests-sim2h

   - docker.build.minimal:
      filters:
       branches:
        only:
         - 2019-12-04-docker-timeouts
         - develop
         - final-exam
   - docker.build.trycp_server:
      requires:
       - docker.build.minimal
   - docker.build.sim2h_server:
      requires:
       - docker.build.minimal
   # @todo this fails because the tests don't pass without a git repo
   # - docker.build.latest

 cold.mac:
  jobs:
   - cold.mac.10.nix:
      filters:
       branches:
        only:
         - develop

 deploy:
  jobs:
   - deploy.mac:
      filters:
       branches:
        ignore: /.*/
       tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-alpha[0-9]+$/
   - deploy.linux:
      filters:
       branches:
        ignore: /.*/
       tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-alpha[0-9]+$/
   - deploy.crates:
      filters:
       branches:
        ignore: /.*/
       tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-alpha[0-9]+$/
