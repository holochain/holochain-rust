version: 2.1

commands:
 build-docker:
  description: "Build and deploy a docker box"
  parameters:
   box:
    type: string
    default: "minimal"
  steps:
   - checkout
   - run: ./docker/login
   - run:
      no_output_timeout: 45m
      command: ./docker/build << parameters.box >> $CIRCLE_BRANCH
   - run:
      no_output_timeout: 20m
      command: ./docker/push << parameters.box >> $CIRCLE_BRANCH

jobs:
 # must be called build for local circle cli to work
 # is actually unit tests
 build:
  docker:
   - image: holochain/holochain-rust:circle.build.develop
  resource_class: xlarge
  steps:
   - checkout
   - run:
      command: nix-shell --run hc-rust-test
      no_output_timeout: 20m

 code-coverage:
  machine: true
  resource_class: xlarge
  steps:
   - checkout
   - run: docker run --env CODECOV_TOKEN --rm --security-opt seccomp=unconfined -v $(pwd):/project holochain/holochain-rust:circle.build.develop sh -c "cd /project && nix-shell --run hc-rust-coverage-kcov"

 fmt:
  docker:
   - image: holochain/holochain-rust:circle.fmt.develop
  steps:
   - checkout
   - run:
      command: nix-shell --run hc-test-fmt
      no_output_timeout: 20m
   - run:
      command: nix-shell --run hn-rust-clippy
      no_output_timeout: 20m
   # don't allow unpinned deps
   - run:
      name: no unpinnned deps
      command: |
        # temporary avoid build fails due to greps
        set +eo pipefail
        export UNPINNED=`nix-shell --run hc-rust-manifest-list-unpinned`
        set -eo pipefail
        if [[ $UNPINNED ]]
        then
         echo "unpinned deps must be empty:"
         echo "$UNPINNED"
         exit 1
        fi
   # don't allow changelog root items with no PR reference
   - run:
      name: no changelogs without PR references
      command: |
        # temporary avoid build fails due to greps
        set +eo pipefail
        export UNREFERENCED=`nix-shell --run hc-release-docs-changelog-list-missing-references`
        set -eo pipefail
        if [[ $UNREFERENCED ]]
        then
          echo "all root level changelog items need a PR reference:"
          echo "$UNREFERENCED"
          exit 1
        fi

   # flag any references to a nightly version in a readme other than the
   # ${date} in nix-shell
   - run:
      name: no readmes with bad rust nightly versions
      command: |
        # temporary avoid build fails due to greps
        set +eo pipefail
        export BAD_NIGHTLY=`nix-shell --run hc-release-docs-readme-list-stale-nightlies`
        set -eo pipefail
        if [[ $BAD_NIGHTLY ]]
        then
          echo "there is an incorrect nightly version in a readme file:"
          echo $BAD_NIGHTLY
          exit 1
        fi

 app-spec-tests-sim2h:
   docker:
     - image: holochain/holochain-rust:circle.sim2h.develop
   resource_class: xlarge
   steps:
     - checkout
     - run:
         name: sim2h server
         command: nix-shell --run hc-sim2h-server
         background: true
         no_output_timeout: 20m
     - run:
         name: app spec tests
         command: nix-shell --run 'hc-test-app-spec app_spec sim2h'
         no_output_timeout: 20m

 stress-tests-sim2h:
   docker:
     - image: holochain/holochain-rust:circle.sim2h.develop
   resource_class: xlarge
   steps:
     - checkout
     - run:
         name: sim2h server
         command: nix-shell --run "hc-sim2h-server -p 9002"
         background: true
         no_output_timeout: 20m
     - run:
         name: stress tests
         command: nix-shell --run hc-stress-test-sim2h
         no_output_timeout: 20m

 cli-tests:
  docker:
   - image: holochain/holochain-rust:circle.cli-tests.develop
  steps:
   - checkout

   - run:
      name: test cli
      command: nix-shell --run hc-cli-test
      no_output_timeout: 20m

 wasm-conductor-tests:
  docker:
   - image: holochain/holochain-rust:circle.wasm-conductor-tests.develop
  steps:
   - checkout
   - run:
       name: wasm conductor tests
       command: nix-shell --run hc-conductor-wasm-test
       no_output_timeout: 20m

 deploy-mac:
  macos:
   xcode: "10.2.0"
  steps:
   - checkout
   - run:
      name: Deploy mac binaries
      no_output_timeout: 20m
      command: |
       curl https://nixos.org/nix/install | sh
       . /Users/distiller/.nix-profile/etc/profile.d/nix.sh
       nix-shell --run hc-release-github-binaries

 deploy-linux:
  docker:
   - image: holochain/holonix:ubuntu
  steps:
   - run: sudo apt-get update && sudo apt-get install -y git ssh
   - checkout
   - run:
      name: Deploy linux binaries
      no_output_timeout: 20m
      command: |
       . /home/docker/.nix-profile/etc/profile.d/nix.sh
       nix-shell --run hc-release-github-binaries

 deploy-crates:
  docker:
   - image: holochain/holonix:latest
  steps:
   - checkout
   - run:
      no_output_timeout: 20m
      command: nix-shell --run hc-release-hook-publish

 docker-build-latest:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: latest

 docker-build-circle-build:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: circle.build

 docker-build-circle-sim2h:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: circle.sim2h

 docker-build-circle-cli-tests:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: circle.cli-tests

 docker-build-circle-fmt:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: circle.fmt

 docker-build-circle-wasm-conductor-tests:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: circle.wasm-conductor-tests

 docker-build-sim2h-server:
  resource_class: large
  machine: true
  steps:
  - build-docker:
     box: sim2h_server

 docker-build-trycp-server:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: trycp_server

 docker-build-minimal:
  resource_class: large
  machine: true
  steps:
   - build-docker:
      box: minimal

workflows:
 version: 2
 tests:
  jobs:
   - build
   - fmt
   # @todo flakey websocket connections
   - app-spec-tests-sim2h
   - stress-tests-sim2h
   - cli-tests
   - wasm-conductor-tests

   - code-coverage:
      filters:
       branches:
        only:
         - develop
         - test-kcov
         # NOTE - add your branche here if working on coverage

   - docker-build-minimal:
      filters:
       branches:
        only:
         - develop
         - final-exam
         - transactional
         - wire-message-receipts
   - docker-build-trycp-server:
      requires:
       - docker-build-minimal
   - docker-build-sim2h-server:
      requires:
       - docker-build-minimal

   - docker-build-latest:
      filters:
       branches:
        only:
         - develop
         - final-exam
         - transactional
         - wire-message-receipts
   - docker-build-circle-build:
      requires:
       - docker-build-latest
   - docker-build-circle-sim2h:
      requires:
       - docker-build-latest
   - docker-build-circle-cli-tests:
      requires:
       - docker-build-latest
   - docker-build-circle-fmt:
      requires:
       - docker-build-latest
   - docker-build-circle-wasm-conductor-tests:
      requires:
       - docker-build-latest

 deploy:
  jobs:
   - deploy-mac:
      filters:
       branches:
        ignore: /.*/
       tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-alpha[0-9]+$/
   - deploy-linux:
      filters:
       branches:
        ignore: /.*/
       tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-alpha[0-9]+$/
   - deploy-crates:
      filters:
       branches:
        ignore: /.*/
       tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-alpha[0-9]+$/
