# https://docs.travis-ci.com/user/customizing-the-build/#safelisting-or-blocklisting-branches
# we build all PRs already, don't need redundant branch builds
branches:
  only:
    - master
    - develop
    - /^(holochain-nodejs-|release-)?v\d+\.\d+\.\d+-alpha\d+$/

_trusty_nodejs: &_trusty_nodejs
  dist: trusty
  language: node_js
  node_js:
    - "8"

_trusty_bash: &_trusty_bash
  dist: trusty
  # https://github.com/travis-ci/travis-ci/issues/5175#issuecomment-215016943
  language: bash

_cargo_cache_template: &_cargo_cache_template
  # manually cache as we manually install rustup
  # https://docs.travis-ci.com/user/caching/#rust-cargo-cache
  cache:
    timeout: 1000
    directories:
      - $HOME/.cargo
      - $TRAVIS_BUILD_DIR/target
  install:
    - export PATH=$HOME/.cargo/bin:$PATH
  before_cache:
    - cd $TRAVIS_BUILD_DIR && . scripts/travis_cache_clean.sh
    - rm -rf $HOME/.cargo/registry/index

_windows_template: &_windows_template
  os: windows
  language: rust
  rust: nightly-2019-01-24-x86_64-pc-windows-msvc
  before_install:
  - choco install nodist
  - PATH="/c/Program Files (x86)/Nodist/bin:$PATH"
  - nodist add $TRAVIS_NODE_VERSION
  - nodist $TRAVIS_NODE_VERSION
  - NODE_PATH="/c/Program Files (x86)\Nodist\bin\node_modules;$NODE_PATH"
  - PATH="$PATH:/c/Program Files (x86)/Nodist/bin"

_unix_nodejs_conductor_template: &_unix_nodejs_conductor_template
  install:
    # install our own nodejs to get the correct version to create a build for
    - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.10.1
    - export PATH=$HOME/.yarn/bin:$PATH
  # manually cache as we manually install rustup
  # https://docs.travis-ci.com/user/caching/#rust-cargo-cache
  cache:
    yarn: true
    timeout: 1000
    directories:
      - node_modules
      - $HOME/.cargo
      - $TRAVIS_BUILD_DIR/target

# the following is all for nodejs deployment
_linux_nodejs_template: &_linux_nodejs_template
  os: linux
  dist: bionic
  language: rust
  rust: nightly-2019-01-24
  before_install:
    - . ./scripts/install/auto.sh

_macosx_nodejs_template: &_macosx_nodejs_template
  os: osx
  language: rust
  rust: nightly-2019-01-24
  before_install:
    - . ./scripts/install/auto.sh

_to_deploy_template: &_to_deploy_template
  if: tag =~ /^holochain-nodejs-v\d+\.\d+\.\d+-alpha\d+/

_env_node_8_deploy_template: &_env_node_8_deploy_template
  env:
  - TRAVIS_NODE_VERSION="8"
  - PERFORM_NODE_DEPLOY=1

_env_node_10_deploy_template: &_env_node_10_deploy_template
  env:
  - TRAVIS_NODE_VERSION="10"
  - PERFORM_NODE_DEPLOY=1

_env_node_11_deploy_template: &_env_node_11_deploy_template
  env:
  - TRAVIS_NODE_VERSION="11"
  - PERFORM_NODE_DEPLOY=1

_nodejs_deploy_template: &_nodejs_deploy_template
  cache:
      yarn: true
      cargo: true
      directories:
          - node_modules
  script:
      - sh ./scripts/build_nodejs_conductor.sh
  # deploy the node-pre-gyp binary to github releases so it's there when the npm package is installed
  before_deploy:
   # windows doesn't like absolute paths so set the working dir here
   - cd $TRAVIS_BUILD_DIR
  deploy:
      provider: releases
      api_key:
          secure: nrLixlb3mlfRoxBDp5+fBV3I81N2LhJIj7hIB+fg0RT452w0+hHuTCn79NJ4tN4M2DlENlS9o+no3wzGw/CRUuyW2/4BKQQ24B1Obf7gMQJD4p0NE8uX9SZ7er08Ndc5HjC0ZfIBTB53GKI/j5gv9vmM9qcrdeGMtCAzuM10WJBgesT7TCNrrD0iPXYtPfzyNMJXtu8VrRMBZt3dW2wrvUy73CujVECbH4BbFKOEl/EQ9Gyi8KkSSKZoeXLXHMJiuMTBrDVlUY69m9o37X6MePHmpFSDiykPGsYa8hAQcWnCY9a9LORq7scbqYeTBEVijS58jfiVPQM/tC7LPhWNPgZ2jw0V7t+tM6tTYpJjIiAf83rnNwd6I+uhjWd7QuJvgo7LfZKcSCEIW4MYgcaK14QuJv4e+tbzrJNqkskIHYcSAF5Zzvc7CkyTO5wEnfNsiKDKLmdVvgMzAxyBfT+7J0msBOvqLirSPGXJcYRpZT0kSDwfgYyqRw3gXOjUgtONS+nC3MiV/vZ74c53qt/37R2+GmDRpB4viEiYTHGZmM4woXUF58Jg6mgaLjMJaI80DbTUr8pKudNtS31EWCP0EdNflzv5Ewlu/CwAmPA0AHuk5ZyvQNtQFERVw80nP7g210Layj6rLKMvEMgiecLgw1VmzOEoGPnMksnyJpplyqA=
      file_glob: true
      file: nodejs_conductor/bin-package/*.tar.gz
      skip_cleanup: true
      # publish only if we're building a tag and if the PERFORM_NODE_DEPLOY is set to 1
      on:
          tags: true
          condition: $PERFORM_NODE_DEPLOY = 1
      name: $TRAVIS_TAG

_windows_nodejs_conductor_template: &_windows_nodejs_conductor_template
  install:
    - choco upgrade yarn
    - export PATH="/c/Program Files (x86)/Yarn/bin:$PATH"
    # deps for neon, found at https://guides.neon-bindings.com/getting-started/
    - npm install --scripts-prepend-node-path=true --global --vs2015 --production windows-build-tools
    - yarn config set python python2.7
    - npm config set msvs_version 2015
    - yarn config set msvs_version 2015 --global
# nodejs specific deployment templates stop here

# holochain-cli deploy template
_cli_deploy_template: &_cli_deploy_template
  dist: bionic
  language: rust
  rust: nightly-2019-01-24
  if: tag =~ /^v\d+\.\d+\.\d+-alpha\d+/
  before_script:
    - . ./scripts/install/auto.sh
  script:
    - cargo rustc --manifest-path cli/Cargo.toml --target $TARGET --release -- -C lto
    - mkdir cli-$TRAVIS_TAG-$TARGET
    - cp target/$TARGET/release/hc cli/LICENSE cli/README.md cli-$TRAVIS_TAG-$TARGET/
    - tar czf cli-$TRAVIS_TAG-$TARGET.tar.gz cli-$TRAVIS_TAG-$TARGET/
  deploy:
    provider: releases
    api_key:
        secure: nrLixlb3mlfRoxBDp5+fBV3I81N2LhJIj7hIB+fg0RT452w0+hHuTCn79NJ4tN4M2DlENlS9o+no3wzGw/CRUuyW2/4BKQQ24B1Obf7gMQJD4p0NE8uX9SZ7er08Ndc5HjC0ZfIBTB53GKI/j5gv9vmM9qcrdeGMtCAzuM10WJBgesT7TCNrrD0iPXYtPfzyNMJXtu8VrRMBZt3dW2wrvUy73CujVECbH4BbFKOEl/EQ9Gyi8KkSSKZoeXLXHMJiuMTBrDVlUY69m9o37X6MePHmpFSDiykPGsYa8hAQcWnCY9a9LORq7scbqYeTBEVijS58jfiVPQM/tC7LPhWNPgZ2jw0V7t+tM6tTYpJjIiAf83rnNwd6I+uhjWd7QuJvgo7LfZKcSCEIW4MYgcaK14QuJv4e+tbzrJNqkskIHYcSAF5Zzvc7CkyTO5wEnfNsiKDKLmdVvgMzAxyBfT+7J0msBOvqLirSPGXJcYRpZT0kSDwfgYyqRw3gXOjUgtONS+nC3MiV/vZ74c53qt/37R2+GmDRpB4viEiYTHGZmM4woXUF58Jg6mgaLjMJaI80DbTUr8pKudNtS31EWCP0EdNflzv5Ewlu/CwAmPA0AHuk5ZyvQNtQFERVw80nP7g210Layj6rLKMvEMgiecLgw1VmzOEoGPnMksnyJpplyqA=
    file_glob: true
    file: cli-$TRAVIS_TAG-$TARGET.tar.gz
    skip_cleanup: true
    on:
        tags: true
    name: $TRAVIS_TAG

# holochain-conductor deploy template
_conductor_deploy_template: &_conductor_deploy_template
  dist: bionic
  language: rust
  rust: nightly-2019-01-24
  if: tag =~ /^v\d+\.\d+\.\d+-alpha\d+/
  before_script:
    - . ./scripts/install/auto.sh
  script:
    - cargo rustc --manifest-path conductor/Cargo.toml --target $TARGET --release -- -C lto
    - mkdir conductor-$TRAVIS_TAG-$TARGET
    - cp target/$TARGET/release/holochain conductor/LICENSE conductor/README.md conductor-$TRAVIS_TAG-$TARGET/
    - tar czf conductor-$TRAVIS_TAG-$TARGET.tar.gz conductor-$TRAVIS_TAG-$TARGET/
  deploy:
    provider: releases
    api_key:
        secure: nrLixlb3mlfRoxBDp5+fBV3I81N2LhJIj7hIB+fg0RT452w0+hHuTCn79NJ4tN4M2DlENlS9o+no3wzGw/CRUuyW2/4BKQQ24B1Obf7gMQJD4p0NE8uX9SZ7er08Ndc5HjC0ZfIBTB53GKI/j5gv9vmM9qcrdeGMtCAzuM10WJBgesT7TCNrrD0iPXYtPfzyNMJXtu8VrRMBZt3dW2wrvUy73CujVECbH4BbFKOEl/EQ9Gyi8KkSSKZoeXLXHMJiuMTBrDVlUY69m9o37X6MePHmpFSDiykPGsYa8hAQcWnCY9a9LORq7scbqYeTBEVijS58jfiVPQM/tC7LPhWNPgZ2jw0V7t+tM6tTYpJjIiAf83rnNwd6I+uhjWd7QuJvgo7LfZKcSCEIW4MYgcaK14QuJv4e+tbzrJNqkskIHYcSAF5Zzvc7CkyTO5wEnfNsiKDKLmdVvgMzAxyBfT+7J0msBOvqLirSPGXJcYRpZT0kSDwfgYyqRw3gXOjUgtONS+nC3MiV/vZ74c53qt/37R2+GmDRpB4viEiYTHGZmM4woXUF58Jg6mgaLjMJaI80DbTUr8pKudNtS31EWCP0EdNflzv5Ewlu/CwAmPA0AHuk5ZyvQNtQFERVw80nP7g210Layj6rLKMvEMgiecLgw1VmzOEoGPnMksnyJpplyqA=
    file_glob: true
    file: conductor-$TRAVIS_TAG-$TARGET.tar.gz
    skip_cleanup: true
    on:
        tags: true
    name: $TRAVIS_TAG

_windows_template_lite: &_windows_template_lite
  os: windows
  language: rust
  rust: nightly-2019-01-24-x86_64-pc-windows-msvc
  before_install:
   - CARGO_INCREMENTAL=1
   - RUSTFLAGS="-Z thinlto -C codegen-units=16"
  cache:
   timeout: 1000
   directories:
    # only keep target directories
    # as we don't keep .cargo everything will be redownloaded every time
    # as travis downloads the cache every time, this doesn't make much
    # difference, actually it can be a bit faster or slightly slower to pull
    # the crates down vs. loading the cache - seems to be an overall benefit
    # as we do CARGO_INCREMENTAL and keep the targets, the newly downloaded
    # crates don't recompile, so we save *a lot* of time there
    - target
    - ${HC_TARGET_PREFIX}${TEST_PATH}target
    - ${HC_TARGET_PREFIX}${TEST_PATH}${WASM_PATH}target
    - ${HC_TARGET_PREFIX}${TEST_PATH}${WASM_PATH_2}target
  install:
    # "none" is a hack here to avoid "" ending up in the cache, potentially
    # caching everything in the repo (we never want to accidentally do that)
    - if [ ! -z "$WASM_PATH" ]; then rustup target add wasm32-unknown-unknown; fi;
    - if [ ! -z "$WASM_PATH" ]; then cargo build --manifest-path ${TEST_PATH}${WASM_PATH}Cargo.toml --release --target wasm32-unknown-unknown --target-dir ${HC_TARGET_PREFIX}${TEST_PATH}${WASM_PATH}target; fi;
    - if [ ! -z "$WASM_PATH_2" ]; then cargo build --manifest-path ${TEST_PATH}${WASM_PATH_2}Cargo.toml --release --target wasm32-unknown-unknown --target-dir ${HC_TARGET_PREFIX}${TEST_PATH}${WASM_PATH_2}target; fi;

  script:
    - cargo test -p $TEST_P --release --target-dir ${HC_TARGET_PREFIX}${TEST_PATH}target

jobs:
  # test builds are ordered from slowest to quickest
  # this allows us to keep walltimes down
  include:

    - name: "windows holochain_sodium"
      <<: *_windows_template_lite
      env:
       - TEST_P=holochain_sodium
       - TEST_PATH=sodium/

    - name: "windows hc"
      <<: *_windows_template_lite
      env:
       - TEST_P=hc
       - TEST_PATH=cli/

    - name: "windows holochain_net"
      <<: *_windows_template_lite
      env:
       - TEST_P=holochain_net
       - TEST_PATH=net/

    - name: "windows core"
      <<: *_windows_template_lite
      env:
       - TEST_P=holochain_core
       - TEST_PATH=core/
       - WASM_PATH=src/nucleus/actions/wasm-test/

    - name: "C binding tests"
      <<: *_trusty_bash
      # sudo is needed for codecov, && system library install which makes things 20-50s slower
      # https://docs.travis-ci.com/user/reference/overview/#virtualisation-environment-vs-operating-system
      sudo: true
      # manually cache as we manually install rustup
      # https://docs.travis-ci.com/user/caching/#rust-cargo-cache
      cache:
        timeout: 1000
        directories:
          - $HOME/.cargo
          # faster to build this than manage a cache for the target
          # - $TRAVIS_BUILD_DIR/target
      install:
        - export PATH=$HOME/.cargo/bin:$PATH
      script:
        - make test_c_ci
      before_cache:
        - rm -rf $HOME/.cargo/registry/index

    # holochain-cli releases section
    - name: "CLI DEPLOY - 64 bit Linux"
      <<: *_cli_deploy_template
      env:
        - TARGET=x86_64-unknown-linux-gnu
        - CRATE_NAME=hc
      os: linux

    - name: "CLI DEPLOY - 64 bit OSX"
      <<: *_cli_deploy_template
      env:
        - TARGET=x86_64-apple-darwin
        - CRATE_NAME=hc
      os: osx
    - name: "CLI DEPLOY - 64 bit Windows MSVC"
      <<: *_cli_deploy_template
      os: windows
      rust: nightly-2019-01-24-x86_64-pc-windows-msvc
      env:
        - TARGET=x86_64-pc-windows-msvc
        - CRATE_NAME=hc

    - name: "CLI DEPLOY - 64 bit Windows GNU"
      <<: *_cli_deploy_template
      os: windows
      rust: nightly-2019-01-24-x86_64-pc-windows-gnu
      env:
        - TARGET=x86_64-pc-windows-gnu
        - CRATE_NAME=hc

# holochain-conductor releases section
    - name: "CONDUCTOR DEPLOY - 64 bit Linux"
      <<: *_conductor_deploy_template
      env:
        - TARGET=x86_64-unknown-linux-gnu
        - CRATE_NAME=conductor
      os: linux

    - name: "CONDUCTOR DEPLOY - 64 bit OSX"
      <<: *_conductor_deploy_template
      env:
        - TARGET=x86_64-apple-darwin
        - CRATE_NAME=conductor
      os: osx
    - name: "CONDUCTOR DEPLOY - 64 bit Windows MSVC"
      <<: *_conductor_deploy_template
      os: windows
      rust: nightly-2019-01-24-x86_64-pc-windows-msvc
      env:
        - TARGET=x86_64-pc-windows-msvc
        - CRATE_NAME=conductor

    - name: "CONDUCTOR DEPLOY - 64 bit Windows GNU"
      <<: *_conductor_deploy_template
      os: windows
      rust: nightly-2019-01-24-x86_64-pc-windows-gnu
      env:
        - TARGET=x86_64-pc-windows-gnu
        - CRATE_NAME=conductor

    # holochain-nodejs releases section
    - name: "Linux - Node 8"
      <<: *_linux_nodejs_template
      <<: *_to_deploy_template
      <<: *_env_node_8_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_unix_nodejs_conductor_template
    - name: "Linux - Node 10"
      <<: *_linux_nodejs_template
      <<: *_to_deploy_template
      <<: *_env_node_10_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_unix_nodejs_conductor_template
    - name: "Linux - Node 11"
      <<: *_linux_nodejs_template
      <<: *_to_deploy_template
      <<: *_env_node_11_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_unix_nodejs_conductor_template

    - name: "OSX - Node 8"
      <<: *_macosx_nodejs_template
      <<: *_to_deploy_template
      <<: *_env_node_8_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_unix_nodejs_conductor_template
    - name: "OSX - Node 10"
      <<: *_macosx_nodejs_template
      <<: *_to_deploy_template
      <<: *_env_node_10_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_unix_nodejs_conductor_template
    - name: "OSX - Node 11"
      <<: *_macosx_nodejs_template
      <<: *_to_deploy_template
      <<: *_env_node_11_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_unix_nodejs_conductor_template

    - name: "Windows - Node 8"
      <<: *_windows_template
      <<: *_to_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_windows_nodejs_conductor_template
      env:
        - NODIST_PREFIX="/c/Program Files (x86)\Nodist"
        - NODIST_X64=1
        - TRAVIS_NODE_VERSION="8"
        - PERFORM_NODE_DEPLOY=1

    - name: "Windows - Node 10"
      <<: *_windows_template
      <<: *_to_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_windows_nodejs_conductor_template
      env:
        - NODIST_PREFIX="/c/Program Files (x86)\Nodist"
        - NODIST_X64=1
        - TRAVIS_NODE_VERSION="10"
        - PERFORM_NODE_DEPLOY=1

    - name: "Windows - Node 11"
      <<: *_windows_template
      <<: *_to_deploy_template
      <<: *_nodejs_deploy_template
      <<: *_windows_nodejs_conductor_template
      env:
        - NODIST_PREFIX="/c/Program Files (x86)\Nodist"
        - NODIST_X64=1
        - TRAVIS_NODE_VERSION="11"
        - PERFORM_NODE_DEPLOY=1

    - name: "Windows - Node 11 - DRY RUN"
      <<: *_windows_template
      <<: *_nodejs_deploy_template
      <<: *_windows_nodejs_conductor_template
      if: (branch = develop) AND NOT (type = pull_request)
      env:
       - NODIST_PREFIX="/c/Program Files (x86)\Nodist"
       - NODIST_X64=1
       - TRAVIS_NODE_VERSION="11"
       - PERFORM_NODE_DEPLOY=0
